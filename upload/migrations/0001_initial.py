# Generated by Django 4.2.6 on 2024-02-02 11:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Assessment_Base",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "record_date",
                    models.DateField(blank=True, null=True, verbose_name="日期"),
                ),
                (
                    "crew_group",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="班组"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="姓名"
                    ),
                ),
                (
                    "work_certificate_number",
                    models.IntegerField(blank=True, null=True, verbose_name="工作证编号"),
                ),
                (
                    "train_model",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="车型"
                    ),
                ),
                (
                    "assessment_item",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="考核项目"
                    ),
                ),
                (
                    "assessment_result",
                    models.CharField(
                        choices=[("合格", "合格"), ("优秀", "优秀"), ("不合格", "不合格")],
                        max_length=10,
                        verbose_name="考核结果",
                    ),
                ),
            ],
            options={
                "verbose_name": "基础考核信息",
                "verbose_name_plural": "基础考核信息",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Assessment_10A02",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_duration",
                    models.DurationField(blank=True, null=True, verbose_name="整体耗时"),
                ),
                (
                    "emergency_door_release_duration",
                    models.DurationField(blank=True, null=True, verbose_name="逃生门释放耗时"),
                ),
                (
                    "operate_escape_door_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="操作逃生门解锁旋钮"
                    ),
                ),
                (
                    "release_escape_door_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="释放逃生门解锁把手"
                    ),
                ),
                (
                    "push_escape_door",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向外推出逃生门门板"
                    ),
                ),
                (
                    "reduce_escape_door_fall_speed",
                    models.DurationField(
                        blank=True, null=True, verbose_name="逃生门释放过程中借助回收绳减缓门板下落速度"
                    ),
                ),
                (
                    "lift_escape_door_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="上提卡住逃生门解锁把手"
                    ),
                ),
                (
                    "retract_escape_door",
                    models.DurationField(
                        blank=True, null=True, verbose_name="完全收回逃生门门板"
                    ),
                ),
                (
                    "reduce_escape_door_impact_force",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="逃生门收回过程最后阶段使用双手支撑逃生门门板减缓关门撞击力度",
                    ),
                ),
                (
                    "reset_escape_door_lock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位解锁手柄锁闭逃生门"
                    ),
                ),
                (
                    "reset_escape_door_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门解锁旋钮"
                    ),
                ),
                (
                    "reset_escape_door_handle_cover",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门把手盖板"
                    ),
                ),
                (
                    "reset_escape_door_unlock_handle_cover",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门旋钮盖板"
                    ),
                ),
                (
                    "install_escape_door_recovery_rope_cover",
                    models.DurationField(
                        blank=True, null=True, verbose_name="安装逃生门回收绳盖板"
                    ),
                ),
                (
                    "confirm_DDU_escape_door_display",
                    models.DurationField(
                        blank=True, null=True, verbose_name="确认DDU逃生门显示"
                    ),
                ),
                (
                    "assessment_base",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessment_10A02",
                        to="upload.assessment_base",
                    ),
                ),
            ],
            options={"verbose_name": "10A02车型信息", "verbose_name_plural": "10A02车型信息",},
        ),
        migrations.CreateModel(
            name="Assessment_10A01",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_duration",
                    models.DurationField(blank=True, null=True, verbose_name="整体耗时"),
                ),
                (
                    "emergency_door_release_duration",
                    models.DurationField(blank=True, null=True, verbose_name="逃生门释放耗时"),
                ),
                (
                    "unlock_escape_door_box",
                    models.DurationField(
                        blank=True, null=True, verbose_name="解锁逃生门箱体解锁把手"
                    ),
                ),
                (
                    "remove_escape_door_box_cover",
                    models.DurationField(
                        blank=True, null=True, verbose_name="取下逃生门箱体上盖板"
                    ),
                ),
                (
                    "unlock_escape_door_window",
                    models.DurationField(
                        blank=True, null=True, verbose_name="解锁逃生门窗体解锁把手"
                    ),
                ),
                (
                    "push_escape_door_window",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向外推出逃生门窗体"
                    ),
                ),
                (
                    "release_escape_door_slope",
                    models.DurationField(
                        blank=True, null=True, verbose_name="完全释放逃生门坡道"
                    ),
                ),
                (
                    "retract_escape_door_slope",
                    models.DurationField(
                        blank=True, null=True, verbose_name="完全收回逃生门坡道"
                    ),
                ),
                (
                    "retract_escape_door_window",
                    models.DurationField(blank=True, null=True, verbose_name="收回逃生门窗体"),
                ),
                (
                    "reset_escape_door_window_push_rod",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门窗体推杆"
                    ),
                ),
                (
                    "reset_escape_door_window_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门窗体解锁把手"
                    ),
                ),
                (
                    "install_escape_door_box_cover",
                    models.DurationField(
                        blank=True, null=True, verbose_name="安装逃生门箱体上盖板"
                    ),
                ),
                (
                    "reset_escape_door_box_unlock_handle",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位逃生门箱体解锁把手"
                    ),
                ),
                (
                    "close_handle_outer_cover",
                    models.DurationField(blank=True, null=True, verbose_name="关闭把手外盖板"),
                ),
                (
                    "confirm_DDU_escape_door_display",
                    models.DurationField(
                        blank=True, null=True, verbose_name="确认DDU逃生门显示"
                    ),
                ),
                (
                    "assessment_base",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessment_10A01",
                        to="upload.assessment_base",
                    ),
                ),
            ],
            options={"verbose_name": "10A01车型信息", "verbose_name_plural": "10A01车型信息",},
        ),
        migrations.CreateModel(
            name="Assessment_09A0304",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_duration",
                    models.DurationField(blank=True, null=True, verbose_name="整体耗时"),
                ),
                (
                    "emergency_door_release_duration",
                    models.DurationField(blank=True, null=True, verbose_name="逃生门释放耗时"),
                ),
                (
                    "remove_red_handle_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="取下红色手柄保险销耗时"
                    ),
                ),
                (
                    "unlock_red_handle_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="解锁红色手柄耗时"
                    ),
                ),
                (
                    "push_door_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向外推出逃生门以完全释放耗时"
                    ),
                ),
                (
                    "operate_recovery_rope_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="操作回收绳固定手柄耗时"
                    ),
                ),
                (
                    "pull_recovery_rope_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向下拉动回收绳使逃生门上端到位耗时"
                    ),
                ),
                (
                    "lift_recovery_rope_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向上提起回收绳使逃生门关闭到位耗时"
                    ),
                ),
                (
                    "reset_red_handle_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位红色手柄耗时"
                    ),
                ),
                (
                    "install_red_handle_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="安装红色手柄保险销耗时"
                    ),
                ),
                (
                    "reset_recovery_rope_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位回收绳固定手柄耗时"
                    ),
                ),
                (
                    "confirm_HMI_display_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="确认HMI逃生门图标显示耗时"
                    ),
                ),
                (
                    "assessment_base",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessment_09A0304",
                        to="upload.assessment_base",
                    ),
                ),
            ],
            options={
                "verbose_name": "09A0304车型信息",
                "verbose_name_plural": "09A0304车型信息",
            },
        ),
        migrations.CreateModel(
            name="Assessment_09A02",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_duration",
                    models.DurationField(blank=True, null=True, verbose_name="整体耗时"),
                ),
                (
                    "emergency_door_release_duration",
                    models.DurationField(blank=True, null=True, verbose_name="逃生门释放耗时"),
                ),
                (
                    "unlock_handle_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="解锁逃生门红色手柄耗时"
                    ),
                ),
                (
                    "push_door_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="向外推逃生门以完全释放耗时"
                    ),
                ),
                (
                    "release_ramp_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="放倒底部踏板耗时"
                    ),
                ),
                (
                    "retract_ramp_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="复位底部踏板耗时"
                    ),
                ),
                (
                    "get_butterfly_pin_duration",
                    models.DurationField(blank=True, null=True, verbose_name="拿取蝴蝶销耗时"),
                ),
                (
                    "install_butterfly_pin_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="正确安装蝴蝶销耗时"
                    ),
                ),
                (
                    "get_rod_duration",
                    models.DurationField(blank=True, null=True, verbose_name="拿取扭杆耗时"),
                ),
                (
                    "retract_window_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="使用扭杆收回逃生门至接近垂直耗时"
                    ),
                ),
                (
                    "reset_rod_duration",
                    models.DurationField(blank=True, null=True, verbose_name="复位扭杆耗时"),
                ),
                (
                    "excape_second_door_lock_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="逃生门二级锁闭耗时"
                    ),
                ),
                (
                    "excape_first_door_lock_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="逃生门一级锁闭耗时"
                    ),
                ),
                (
                    "remove_butterfly_pin_duration",
                    models.DurationField(blank=True, null=True, verbose_name="取下蝴蝶销耗时"),
                ),
                (
                    "reset_lock_handle_duration",
                    models.DurationField(blank=True, null=True, verbose_name="复位蝴蝶销耗时"),
                ),
                (
                    "confirm_left_door_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="确认左关门灯耗时"
                    ),
                ),
                (
                    "confirm_HMI_display_duration",
                    models.DurationField(
                        blank=True, null=True, verbose_name="确认HMI逃生门显示耗时"
                    ),
                ),
                (
                    "assessment_base",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessment_09A02",
                        to="upload.assessment_base",
                    ),
                ),
            ],
            options={"verbose_name": "09A02车型信息", "verbose_name_plural": "09A02车型信息",},
        ),
        migrations.CreateModel(
            name="NewUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "roles",
                    models.IntegerField(
                        choices=[[0, "admin"], [1, "user"]],
                        default=1,
                        verbose_name="角色",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户信息",
                "verbose_name_plural": "用户信息",
                "abstract": False,
                "swappable": "AUTH_USER_MODEL",
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
    ]
